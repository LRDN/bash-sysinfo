#!/usr/bin/env bash
#
# System Information Script v1.0.0
# https://github.com/lrdn/bash-sysinfo
#
# Copyright (c) 2023 LRDN <git@lrdn.net>
# Released under the MIT license

function format_bytes() {
	echo $(numfmt --to=iec --suffix=B --from-unit=1024 "${1}")
}

function get_os_release() {
	local release_name="$(</etc/os-release)"
	local release_kernel="$(</proc/sys/kernel/osrelease)"

	if [[ "${release_name}" =~ PRETTY_NAME\=\"([^\"]+)\" ]]; then
		release_name="${BASH_REMATCH[1]}"
	fi

	echo "${release_name} (${release_kernel})"
}

function get_system_uptime() {
	local uptime="$(</proc/uptime)"
	local uptime_date="$(date +%Y/%m/%d\ %H:%M -d @$(($(date +%s) - ${uptime%%.*})))"
	local uptime_days="$((${uptime%%.*} / 60 / 60 / 24)) day"

	if [[ ! "${uptime_days}" =~ ^1[[:blank:]] ]]; then
		uptime_days+="s"
	fi

	echo "${uptime_date} (${uptime_days})"
}

function get_memory_usage() {
	local memory_info="$(</proc/meminfo)"
	local memory_values=(0 0)
	local memory_patterns=()

	case "${1}" in
		(memory) memory_patterns=("MemTotal" "MemAvailable");;
		(swap) memory_patterns=("SwapTotal" "SwapFree");;
	esac

	for index in "${!memory_patterns[@]}"; do
		if [[ "${memory_info}" =~ ${memory_patterns[$index]}:[[:blank:]]*([0-9]+) ]]; then
			memory_values[$index]="${BASH_REMATCH[1]}"
		fi
	done

	local memory_usage=$((${memory_values[0]} - ${memory_values[1]}))
	local memory_usage_pct=$((100 * ${memory_usage} / ${memory_values[0]}))

	echo "${memory_usage_pct}% of $(format_bytes ${memory_values[0]}) ($(format_bytes ${memory_usage}))"
}

function get_disk_usage() {
	local disk_info="$(df -kP)"
	local disk_usage=""

	while read -r disk; do
		disk=(${disk})

		if [[ "${disk[0]}" =~ ^/ && "${disk[1]}" -gt 0 ]]; then
			if [[ -n "${disk_usage}" ]]; then
				disk_usage+=$'\n'"$(printf '%16s')"
			fi

			disk_usage+="${disk[4]} of $(format_bytes ${disk[1]}) ($(format_bytes ${disk[2]})) at ${disk[5]}"
		fi
	done <<< "${disk_info}"

	echo "${disk_usage}"
}

function install_sysinfo() {
	if (( EUID != 0 )); then
		echo "Error: Root privileges are required"
		exit 1
	fi
}

function print_sysinfo() {
	local hostname="$(hostname -f)"
	local os_release="$(get_os_release)"
	local system_uptime="$(get_system_uptime)"
	local load_average=($(</proc/loadavg))
	local memory_usage="$(get_memory_usage memory)"
	local swap_usage="$(get_memory_usage swap)"
	local disk_usage="$(get_disk_usage)"

	cat <<- EOF

	  ${hostname}
	  ${hostname//[[:print:]]/-}

	  ${os_release}
	  Running since ${system_uptime}

	  System load   ${load_average[@]:0:3}
	  Memory usage  ${memory_usage}
	  Swap usage    ${swap_usage}

	  Disk usage    ${disk_usage}

	EOF
}

function sysinfo() {
	case "${1}" in
		(install) install_sysinfo;;
		(*) print_sysinfo;;
	esac
}

sysinfo "$@"
exit 0
